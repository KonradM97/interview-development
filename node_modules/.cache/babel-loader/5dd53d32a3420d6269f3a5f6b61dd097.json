{"remainingRequest":"C:\\Users\\Konrad-ASUS\\OneDrive\\Pulpit\\Repositories\\interview-main\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Konrad-ASUS\\OneDrive\\Pulpit\\Repositories\\interview-main\\src\\models\\WorkerListFactory.js","dependencies":[{"path":"C:\\Users\\Konrad-ASUS\\OneDrive\\Pulpit\\Repositories\\interview-main\\src\\models\\WorkerListFactory.js","mtime":1647705693278},{"path":"C:\\Users\\Konrad-ASUS\\OneDrive\\Pulpit\\Repositories\\interview-main\\babel.config.js","mtime":1647705692361},{"path":"C:\\Users\\Konrad-ASUS\\OneDrive\\Pulpit\\Repositories\\interview-main\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647705843592},{"path":"C:\\Users\\Konrad-ASUS\\OneDrive\\Pulpit\\Repositories\\interview-main\\node_modules\\babel-loader\\lib\\index.js","mtime":1647705849171}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL0tvbnJhZC1BU1VTL09uZURyaXZlL1B1bHBpdC9SZXBvc2l0b3JpZXMvaW50ZXJ2aWV3LW1haW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIkM6L1VzZXJzL0tvbnJhZC1BU1VTL09uZURyaXZlL1B1bHBpdC9SZXBvc2l0b3JpZXMvaW50ZXJ2aWV3LW1haW4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJDOi9Vc2Vycy9Lb25yYWQtQVNVUy9PbmVEcml2ZS9QdWxwaXQvUmVwb3NpdG9yaWVzL2ludGVydmlldy1tYWluL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcy5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCBXb3JrZXIgZnJvbSAnLi9Xb3JrZXInOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwoKdmFyIFdvcmtlckxpc3RGYWN0b3J5ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBXb3JrZXJMaXN0RmFjdG9yeSgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBXb3JrZXJMaXN0RmFjdG9yeSk7CgogICAgdGhpcy5OQVRJT05BTElUWSA9ICdHQic7CiAgICB0aGlzLkFNT1VOVF9PRl9SRVNVTFRTID0gMjA7CiAgfQoKICBfY3JlYXRlQ2xhc3MoV29ya2VyTGlzdEZhY3RvcnksIFt7CiAgICBrZXk6ICJnZXRXb3JrZXJzIiwKICAgIHZhbHVlOgogICAgLyoqCiAgICAgKgogICAgICogQHJldHVybnMge0FycmF5PFdvcmtlcj59CiAgICAgKi8KICAgIGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9nZXRXb3JrZXJzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB3b3JrZXJzLCBkYXRhLCB3b3JrZXIsIGk7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgd29ya2VycyA9IFtdOwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9mZXRjaERhdGEoKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgICAgd29ya2VyID0gZGF0YVtpXTsKICAgICAgICAgICAgICAgICAgd29ya2Vycy5wdXNoKG5ldyBXb3JrZXIoewogICAgICAgICAgICAgICAgICAgIGlkOiB3b3JrZXIuaWQudmFsdWUsCiAgICAgICAgICAgICAgICAgICAgZmlyc3ROYW1lOiB3b3JrZXIubmFtZS5maXJzdCwKICAgICAgICAgICAgICAgICAgICBsYXN0TmFtZTogd29ya2VyLm5hbWUubGFzdCwKICAgICAgICAgICAgICAgICAgICBhZ2U6IHdvcmtlci5kb2IuYWdlLAogICAgICAgICAgICAgICAgICAgIHNhbGFyeTogdGhpcy5fZ2V0U2FsYXJ5KCkKICAgICAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gODsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dC50MC5tZXNzYWdlKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHdvcmtlcnMpOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcywgW1sxLCA4XV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXRXb3JrZXJzKCkgewogICAgICAgIHJldHVybiBfZ2V0V29ya2Vycy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZ2V0V29ya2VyczsKICAgIH0oKQogICAgLyoqCiAgICAgKgogICAgICogQHJldHVybnMge251bWJlcn0KICAgICAqIEBwcml2YXRlCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiX2dldFNhbGFyeSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gX2dldFNhbGFyeSgpIHsKICAgICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDExKSAqIDUwMDsKICAgIH0KICAgIC8qKgogICAgICoKICAgICAqIEByZXR1cm5zIHtQcm9taXNlPCo+fQogICAgICogQHByaXZhdGUKICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJfZmV0Y2hEYXRhIiwKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZmV0Y2hEYXRhMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIF95aWVsZCRheGlvcyRnZXQsIGRhdGE7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCJodHRwczovL3JhbmRvbXVzZXIubWUvYXBpLz9uYXQ9Ii5jb25jYXQodGhpcy5OQVRJT05BTElUWSwgIiZyZXN1bHRzPSIpLmNvbmNhdCh0aGlzLkFNT1VOVF9PRl9SRVNVTFRTKSk7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF95aWVsZCRheGlvcyRnZXQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkYXhpb3MkZ2V0LmRhdGE7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgZGF0YS5yZXN1bHRzKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gX2ZldGNoRGF0YSgpIHsKICAgICAgICByZXR1cm4gX2ZldGNoRGF0YTIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIF9mZXRjaERhdGE7CiAgICB9KCkKICB9XSk7CgogIHJldHVybiBXb3JrZXJMaXN0RmFjdG9yeTsKfSgpOwoKZXhwb3J0IHsgV29ya2VyTGlzdEZhY3RvcnkgYXMgZGVmYXVsdCB9Ow=="},{"version":3,"sources":["C:/Users/Konrad-ASUS/OneDrive/Pulpit/Repositories/interview-main/src/models/WorkerListFactory.js"],"names":["Worker","axios","WorkerListFactory","NATIONALITY","AMOUNT_OF_RESULTS","workers","_fetchData","data","i","length","worker","push","id","value","firstName","name","first","lastName","last","age","dob","salary","_getSalary","console","log","message","Math","floor","random","get","results"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,iB;;;;SACjBC,W,GAAc,I;SACdC,iB,GAAoB,E;;;;;;AAEpB;AACJ;AACA;AACA;;gFACI;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,gBAAAA,OADR,GACkB,EADlB;AAAA;AAAA;AAAA,uBAG2B,KAAKC,UAAL,EAH3B;;AAAA;AAGcC,gBAAAA,IAHd;;AAKQ,qBAASC,CAAT,GAAa,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjCE,kBAAAA,MAAM,GAAGH,IAAI,CAACC,CAAD,CAAb;AACAH,kBAAAA,OAAO,CAACM,IAAR,CAAa,IAAIX,MAAJ,CAAW;AAChBY,oBAAAA,EAAE,EAAEF,MAAM,CAACE,EAAP,CAAUC,KADE;AAEhBC,oBAAAA,SAAS,EAAEJ,MAAM,CAACK,IAAP,CAAYC,KAFP;AAGhBC,oBAAAA,QAAQ,EAAEP,MAAM,CAACK,IAAP,CAAYG,IAHN;AAIhBC,oBAAAA,GAAG,EAAET,MAAM,CAACU,GAAP,CAAWD,GAJA;AAKhBE,oBAAAA,MAAM,EAAE,KAAKC,UAAL;AALQ,mBAAX,CAAb;AAQH;;AAfT;AAAA;;AAAA;AAAA;AAAA;AAiBQC,gBAAAA,OAAO,CAACC,GAAR,CAAY,YAAMC,OAAlB;;AAjBR;AAAA,iDAmBWpB,OAnBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAsBA;AACJ;AACA;AACA;AACA;;;;WACI,sBAAY;AACR,aAAOqB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,GAAxC;AACH;AAED;AACJ;AACA;AACA;AACA;;;;;gFACI;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACyB3B,KAAK,CAAC4B,GAAN,0CACiB,KAAK1B,WADtB,sBAC6C,KAAKC,iBADlD,EADzB;;AAAA;AAAA;AACWG,gBAAAA,IADX,oBACWA,IADX;AAAA,kDAIWA,IAAI,CAACuB,OAJhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;SA5CiB5B,iB","sourcesContent":["import Worker from './Worker';\nimport axios from 'axios';\n\nexport default class WorkerListFactory {\n    NATIONALITY = 'GB';\n    AMOUNT_OF_RESULTS = 20;\n\n    /**\n     *\n     * @returns {Array<Worker>}\n     */\n    async getWorkers(){\n        let workers = [];\n        try{\n            const data = await this._fetchData();\n            let worker;\n            for (let i = 0; i < data.length; i++){\n                worker = data[i];\n                workers.push(new Worker({\n                        id: worker.id.value,\n                        firstName: worker.name.first,\n                        lastName: worker.name.last,\n                        age: worker.dob.age,\n                        salary: this._getSalary(),\n                    },\n                ));\n            }\n        } catch (error){\n            console.log(error.message);\n        }\n        return workers;\n    }\n\n    /**\n     *\n     * @returns {number}\n     * @private\n     */\n    _getSalary(){\n        return Math.floor(Math.random() * 11) * 500;\n    }\n\n    /**\n     *\n     * @returns {Promise<*>}\n     * @private\n     */\n    async _fetchData(){\n        const {data} = await axios.get(\n            `https://randomuser.me/api/?nat=${this.NATIONALITY}&results=${this.AMOUNT_OF_RESULTS}`,\n        );\n        return data.results;\n    }\n}"]}]}